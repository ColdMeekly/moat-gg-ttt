
local ⁫​﻿⁯​⁯⁬⁮⁪        = ⁫​﻿⁯​⁯⁬⁮⁪

local ﻿​‪⁬‬‭⁯⁪⁪        = ‌‎⁪⁪​⁫‭‎‌.‌​​﻿‭⁬﻿⁯﻿

local ⁪⁬‬⁪⁭‌⁯‪﻿ = ‌‎‭​‭‪⁫‌‭.⁪⁮​⁫‬⁬‎‪‬.‌⁮‬‌​⁬⁫⁮⁯

local ⁬⁬⁯‎⁬‌⁮⁪​        = ⁪⁮​⁫‬⁬‎‪‬.⁪‎‎⁫‬⁪‭⁮⁫

local ﻿‭⁯‬⁮⁮​‌‬ =
{
	[0x46] = 0x51,
	[0x47] = 0x51,
	[0x48] = 0x51,
	[0x49] = 0x49,
	[0x4A] = 0x49,
	[0x4B] = 0x4B,
	[0x4C] = 0x4B,
	[0x4D] = 0x4B,
	[0x4E] = 0x4E,
	[0x4F] = 0x4E,
	[0x50] = 0x4E,
	[0x51] = 0x51,
	[0x52] = 0x51,
	[0x53] = 0x51,
}

local ⁫‬⁭‬⁯⁬⁪‌‪ =
{
	[0x44] = 0x54,
	[0x42] = 0x41,
}

function ⁬‭⁬⁭⁪​‎⁪‬.⁬‭﻿⁭‌‬⁬⁭​ (‬⁫‎‭⁬⁫﻿﻿⁪)
	if ‌‎‪⁮⁫⁪﻿‭‌ (‬⁫‎‭⁬⁫﻿﻿⁪) then
		‬⁫‎‭⁬⁫﻿﻿⁪ = ⁬‭⁬⁭⁪​‎⁪‬.⁬⁯⁫⁪⁬⁬﻿⁪‬ (‬⁫‎‭⁬⁫﻿﻿⁪)
	end
	
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪⁯‪⁮‬‎‎‎‌   ()
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪⁯‪⁮‬‎‎‎‌   ()
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪⁯‪⁮‬‎‎‎‌   ()
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪⁯‪⁮‬‎‎‎‌   ()
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪‬⁬⁬‌⁭⁪⁯⁮ ()
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪‬⁬⁬‌⁭⁪⁯⁮ ()
	local ﻿⁬⁫‪‭⁯⁯‪‭ = ‬⁫‎‭⁬⁫﻿﻿⁪:⁪‬⁬⁬‌⁭⁪⁯⁮ ()
	
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪‬⁬⁬‌⁭⁪⁯⁮ ()
	
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪‬⁬⁬‌⁭⁪⁯⁮ ()
	‬⁫‎‭⁬⁫﻿﻿⁪:⁪‬⁬⁬‌⁭⁪⁯⁮ ()
	
	return ⁬‭⁬⁭⁪​‎⁪‬.⁪‌‎​⁯⁭‌‭⁮ (‬⁫‎‭⁬⁫﻿﻿⁪, ﻿⁬⁫‪‭⁯⁯‪‭)
end

function ⁬‭⁬⁭⁪​‎⁪‬.⁪‌‎​⁯⁭‌‭⁮ (‬⁫‎‭⁬⁫﻿﻿⁪, ﻿⁬⁫‪‭⁯⁯‪‭)
	if ‌‎‪⁮⁫⁪﻿‭‌ (‬⁫‎‭⁬⁫﻿﻿⁪) then
		‬⁫‎‭⁬⁫﻿﻿⁪ = ⁬‭⁬⁭⁪​‎⁪‬.⁬⁯⁫⁪⁬⁬﻿⁪‬ (‬⁫‎‭⁬⁫﻿﻿⁪)
	end
	
	local ⁫‪‌‎‬‬⁪‎⁭ = ⁬‭⁬⁭⁪​‎⁪‬.﻿﻿⁭‌‎⁫‎⁪​ ()
	for ⁪⁭⁮‭‭⁬‪⁯⁭ = 1, ﻿⁬⁫‪‭⁯⁯‪‭ do
		local ⁬⁮‌⁫‭‌⁪⁬‎ = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫﻿‬⁭‪⁭⁯‌⁪ ()
		local ⁪‎⁫⁫⁫⁪‎⁫﻿      = ﻿​‪⁬‬‭⁯⁪⁪ (⁬⁮‌⁫‭‌⁪⁬‎, 0xFF)
		
		if ﻿‭⁯‬⁮⁮​‌‬ [⁪‎⁫⁫⁫⁪‎⁫﻿] then
			⁬⁮‌⁫‭‌⁪⁬‎ = ﻿‭⁯‬⁮⁮​‌‬ [⁪‎⁫⁫⁫⁪‎⁫﻿]
		end
		
		if ⁫‬⁭‬⁯⁬⁪‌‪ [⁪‎⁫⁫⁫⁪‎⁫﻿] then
			⁬⁮‌⁫‭‌⁪⁬‎ = ⁬⁮‌⁫‭‌⁪⁬‎ - ⁪‎⁫⁫⁫⁪‎⁫﻿
			⁬⁮‌⁫‭‌⁪⁬‎ = ⁬⁮‌⁫‭‌⁪⁬‎ + ⁫‬⁭‬⁯⁬⁪‌‪ [⁪‎⁫⁫⁫⁪‎⁫﻿]
		end
		
		⁫‪‌‎‬‬⁪‎⁭:⁫﻿‬⁭‪⁭⁯‌⁪ (⁬⁮‌⁫‭‌⁪⁬‎)
	end
	
	return ⁫​﻿⁯​⁯⁬⁮⁪ (⁬⁬⁯‎⁬‌⁮⁪​ (⁫‪‌‎‬‬⁪‎⁭:‬⁫﻿⁬‬⁯⁯‪⁯ ()))
end

function ⁬‭⁬⁭⁪​‎⁪‬.⁫⁭⁯​⁪⁮⁭‪⁫ (⁬‬‎⁫⁬⁭‎‪‎, ﻿⁬⁫‪‭⁯⁯‪‭)
	local ⁫‪‌‎‬‬⁪‎⁭ = ⁬‭⁬⁭⁪​‎⁪‬.﻿﻿⁭‌‎⁫‎⁪​ ()
	
	﻿⁬⁫‪‭⁯⁯‪‭ = ﻿⁬⁫‪‭⁯⁯‪‭ - 1
	for ⁪⁭⁮‭‭⁬‪⁯⁭ = 1, ﻿⁬⁫‪‭⁯⁯‪‭ do
		local ⁬⁮‌⁫‭‌⁪⁬‎ = ⁪⁬‬⁪⁭‌⁯‪﻿ (⁬‬‎⁫⁬⁭‎‪‎, ⁪⁭⁮‭‭⁬‪⁯⁭)
		local ⁪‎⁫⁫⁫⁪‎⁫﻿      = ﻿​‪⁬‬‭⁯⁪⁪ (⁬⁮‌⁫‭‌⁪⁬‎, 0xFF)
		
		if ﻿‭⁯‬⁮⁮​‌‬ [⁪‎⁫⁫⁫⁪‎⁫﻿] then
			⁬⁮‌⁫‭‌⁪⁬‎ = ﻿‭⁯‬⁮⁮​‌‬ [⁪‎⁫⁫⁫⁪‎⁫﻿]
		end
		
		if ⁫‬⁭‬⁯⁬⁪‌‪ [⁪‎⁫⁫⁫⁪‎⁫﻿] then
			⁬⁮‌⁫‭‌⁪⁬‎ = ⁬⁮‌⁫‭‌⁪⁬‎ - ⁪‎⁫⁫⁫⁪‎⁫﻿
			⁬⁮‌⁫‭‌⁪⁬‎ = ⁬⁮‌⁫‭‌⁪⁬‎ + ⁫‬⁭‬⁯⁬⁪‌‪ [⁪‎⁫⁫⁫⁪‎⁫﻿]
		end
		
		⁫‪‌‎‬‬⁪‎⁭:⁫﻿‬⁭‪⁭⁯‌⁪ (⁬⁮‌⁫‭‌⁪⁬‎)
	end
	
	return ⁫​﻿⁯​⁯⁬⁮⁪ (⁬⁬⁯‎⁬‌⁮⁪​ (⁫‪‌‎‬‬⁪‎⁭:‬⁫﻿⁬‬⁯⁯‪⁯ ()))
end

local ⁬​⁯⁮‌‭‪‬‭ = {}
⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫ = ⁬‭⁬⁭⁪​‎⁪‬.‌⁬​⁮﻿‭‌⁯﻿ (⁬​⁯⁮‌‭‪‬‭, ⁬‭⁬⁭⁪​‎⁪‬.﻿‎‌⁯​‪⁯⁬﻿.﻿⁮​⁪‭⁮‪⁭​)

function ⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ (⁬​⁯⁮‌‭‪‬‭)
	⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬              = nil
	⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎             = nil
	⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬                = nil
	⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​ = nil
	⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬   = nil
	⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪        = nil
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁮⁪⁮⁬⁭⁭‎⁯ (⁬​⁯⁮‌‭‪‬‭, ⁫‪‌‎‬‬⁪‎⁭)
	⁫‪‌‎‬‬⁪‎⁭:‌‬​⁮‎‭⁬‭⁮   (⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬             )
	⁫‪‌‎‬‬⁪‎⁭:⁫﻿‬⁭‪⁭⁯‌⁪    (⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎            )
	⁫‪‌‎‬‬⁪‎⁭:⁫​﻿‎⁯‎﻿‬​ (⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬               )
	⁫‪‌‎‬‬⁪‎⁭:⁫‎⁮﻿﻿‬‭﻿‭     (⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​)
	⁫‪‌‎‬‬⁪‎⁭:⁫‎⁮﻿﻿‬‭﻿‭     (⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬  )
	⁫‪‌‎‬‬⁪‎⁭:⁫﻿‬⁭‪⁭⁯‌⁪    (⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪       )
	
	return ⁫‪‌‎‬‬⁪‎⁭
end

function ⁬​⁯⁮‌‭‪‬‭.‌‬⁮‌﻿‪‎﻿​ (⁬​⁯⁮‌‭‪‬‭, ‬⁫‎‭⁬⁫﻿﻿⁪)
	⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬              = ‬⁫‎‭⁬⁫﻿﻿⁪:‌‬​⁮‎‭⁬‭⁮   ()
	⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎             = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫﻿‬⁭‪⁭⁯‌⁪    ()
	⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬                = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫​﻿‎⁯‎﻿‬​ ()
	⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​ = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫‎⁮﻿﻿‬‭﻿‭     ()
	⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬   = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫‎⁮﻿﻿‬‭﻿‭     ()
	⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪        = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫﻿‬⁭‪⁭⁯‌⁪    ()
	
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.﻿​​⁮⁬‬⁬⁯‎ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬
end

function ⁬​⁯⁮‌‭‪‬‭.‬﻿‌⁫⁫‪​⁬‪ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎
end

function ⁬​⁯⁮‌‭‪‬‭.⁪⁫⁫⁬⁪‭‪‌⁪ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬
end

function ⁬​⁯⁮‌‭‪‬‭.⁪⁭⁪‭​⁯⁮⁫﻿ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​
end

function ⁬​⁯⁮‌‭‪‬‭.⁫‪⁮‌‬‪⁪‬⁭ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬
end

function ⁬​⁯⁮‌‭‪‬‭.‬⁫‪‪‬⁬⁫⁬‭ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪
end

function ⁬​⁯⁮‌‭‪‬‭.‌‭⁪‪⁯‬‪‭‪ (⁬​⁯⁮‌‭‪‬‭, ﻿⁯​⁬⁭‬⁫‎⁪)
	⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬ = ﻿⁯​⁬⁭‬⁫‎⁪
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.⁪﻿‎‭‭⁮⁮⁫​ (⁬​⁯⁮‌‭‪‬‭, ⁫﻿⁮﻿﻿‬⁬⁪‎)
	⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎ = ⁫﻿⁮﻿﻿‬⁬⁪‎
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.‌‪‪‭﻿⁯‎‬‬ (⁬​⁯⁮‌‭‪‬‭, ⁫﻿⁫⁪⁯⁮​‭‪)
	⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬ = ⁫﻿⁫⁪⁯⁮​‭‪
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁪​⁮⁭‎⁬⁫⁮ (⁬​⁯⁮‌‭‪‬‭, ⁬⁪⁪‭⁬‎⁮⁪⁭)
	⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​ = ⁬⁪⁪‭⁬‎⁮⁪⁭
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.﻿‪⁮⁬⁭⁯‎⁭‭ (⁬​⁯⁮‌‭‪‬‭, ﻿⁭‌⁯⁫‎‭⁮﻿)
	⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬ = ﻿⁭‌⁯⁫‎‭⁮﻿
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.‌⁬‭‭‎‌⁪‭​ (⁬​⁯⁮‌‭‪‬‭, ⁬⁫⁪⁫⁪‌⁪‭​)
	⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪ = ⁬⁫⁪⁫⁪‌⁪‭​
	return ⁬​⁯⁮‌‭‪‬‭
end


⁬‭⁬⁭⁪​‎⁪‬.‌​‎‎‌​⁮​⁪ =
{
	"fd35edd281c2b469cd42a76ca02a9a89",
	"224b6c704171d91cdf21d27a03c0352b1d5a",
	"58ccc1a5bf370cc6368c61c64f8c6f0534335f0ce1915926ff0ea535c265d3b3de5150a8",
	"0cbb5a93903528980b8d3bb41ebe200464567fb2426590a42607b77730e67d99e1064eb16cde8cdfe0d1b8fd94b704b23f0a4ce2fcfc2d28b9ff09769717006448216bc90b313ec7cb8a1b",
	"60b8af0c413f1054b38aab853058611c1670084807e7ecb73c9225977caf0f947c594529",
	"476d16f74f295b0d2ef60f218ae806e2e67203074497b3ed65770eb7643cb150986d0ab79a6bac6437943905717f5191894a06d06469a7b2f84b74777c33d2a6",
	"[[[bbabb0336b37c96d6299ee95c1c19c7e906478]]]",
	"[[[a9b6a13d1741a51932b6eef1f478a20f51a5b7]]]",
	"[[[a9b6a13d1741a5182ec197c6b8d1a00d6f4755]]]",
	"[[[aea1a32c7222da524bdfc5daed81b578f8ccd0]]]",
	"[[[bca9b43b114db2020fecacda8091f6cff0a9c3]]]",
	"[[[aab8b0237ddf0bbdd233701a5273c36e0ee6f6]]]",
	"[[[aab8b0237ddf0bbed53a0c7ae1f0a57d8d3547]]]",
	"[[[aab8b0237ddf0ba0a8552a3d403466cbad7983]]]",
	"[[[aab8b0237ddf0ba7a020041b224a7c31338399]]]",
}


local ⁬​⁯⁮‌‭‪‬‭ = {}
⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫ = ⁬‭⁬⁭⁪​‎⁪‬.‌⁬​⁮﻿‭‌⁯﻿ (⁬​⁯⁮‌‭‪‬‭, ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫)

function ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫.⁪​﻿⁭​⁬⁫⁮⁪ (⁬‬‎⁫⁬⁭‎‪‎, ⁬⁬⁬​‭‭⁪‌⁬)
	⁬⁬⁬​‭‭⁪‌⁬ = ⁬⁬⁬​‭‭⁪‌⁬ or ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫ ()
	
	local ⁫⁬‪⁪⁪⁫‎⁫‎ = ⁬‭⁬⁭⁪​‎⁪‬.‌⁪‎⁪‌⁬⁭‭‎.⁪​﻿⁭​⁬⁫⁮⁪ (⁬‬‎⁫⁬⁭‎‪‎)
	
	⁬⁬⁬​‭‭⁪‌⁬:‌‭⁪‪⁯‬‪‭‪              (⁫⁬‪⁪⁪⁫‎⁫‎:‬﻿‌⁫⁫‪​⁬‪ () ~= nil)
	⁬⁬⁬​‭‭⁪‌⁬:⁪﻿‎‭‭⁮⁮⁫​             (⁫​﻿⁯​⁯⁬⁮⁪ (﻿﻿‬‎⁫‬⁯⁫﻿.⁪⁮⁮⁬⁬‬‌⁬‌ (⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("i "), ⁬‬‎⁫⁬⁭‎‪‎)))
	
	if not ⁬⁬⁬​‭‭⁪‌⁬:﻿​​⁮⁬‬⁬⁯‎ () then
		local ⁫﻿⁫⁪⁯⁮​‭‪ = ﻿﻿‬‎⁫‬⁯⁫﻿.⁫‪‎⁮‬​⁪‎⁬ (⁫⁬‪⁪⁪⁫‎⁫‎:‌‌⁬‭‭‌⁫‭‭ (), ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x12\x10"), "")
		⁫﻿⁫⁪⁯⁮​‭‪ = ﻿﻿‬‎⁫‬⁯⁫﻿.⁫‪‎⁮‬​⁪‎⁬ (⁫﻿⁫⁪⁯⁮​‭‪, ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x17\x7f\x09D"), ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("c"))
		
		⁬⁬⁬​‭‭⁪‌⁬:‌‪‪‭﻿⁯‎‬‬                (⁫﻿⁫⁪⁯⁮​‭‪)
		⁬⁬⁬​‭‭⁪‌⁬:⁫⁪​⁮⁭‎⁬⁫⁮ (⁫⁬‪⁪⁪⁫‎⁫‎:﻿⁫‪‎⁯‪‌⁪⁮ ())
		⁬⁬⁬​‭‭⁪‌⁬:﻿‪⁮⁬⁭⁯‎⁭‭   (⁫⁬‪⁪⁪⁫‎⁫‎:‌‭‬‌‎⁪⁪﻿⁯ ())
		
		local ⁬⁫⁪⁫⁪‌⁪‭​ = ⁬‭⁬⁭⁪​‎⁪‬.⁫⁭⁯​⁪⁮⁭‪⁫ (⁬‬‎⁫⁬⁭‎‪‎, ⁫⁬‪⁪⁪⁫‎⁫‎:⁬⁬﻿‌​‪‎⁫⁬ ())
		⁬⁬⁬​‭‭⁪‌⁬:‌⁬‭‭‎‌⁪‭​        (⁬⁫⁪⁫⁪‌⁪‭​)
	end
	
	return ⁬⁬⁬​‭‭⁪‌⁬
end

function ⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ (⁬​⁯⁮‌‭‪‬‭)
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁮⁪⁮⁬⁭⁭‎⁯ (⁬​⁯⁮‌‭‪‬‭, ⁫‪‌‎‬‬⁪‎⁭)
	⁫‪‌‎‬‬⁪‎⁭:‌‬​⁮‎‭⁬‭⁮   (⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬             )
	⁫‪‌‎‬‬⁪‎⁭:⁫﻿‬⁭‪⁭⁯‌⁪    (⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎            )
	
	if not ⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬ then
		⁫‪‌‎‬‬⁪‎⁭:⁫​﻿‎⁯‎﻿‬​ (⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬               )
		⁫‪‌‎‬‬⁪‎⁭:⁫‎⁮﻿﻿‬‭﻿‭     (⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​)
		⁫‪‌‎‬‬⁪‎⁭:⁫‎⁮﻿﻿‬‭﻿‭     (⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬  )
		⁫‪‌‎‬‬⁪‎⁭:⁫﻿‬⁭‪⁭⁯‌⁪    (⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪       )
	end
	
	return ⁫‪‌‎‬‬⁪‎⁭
end

function ⁬​⁯⁮‌‭‪‬‭.‌‬⁮‌﻿‪‎﻿​ (⁬​⁯⁮‌‭‪‬‭, ‬⁫‎‭⁬⁫﻿﻿⁪)
	⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬              = ‬⁫‎‭⁬⁫﻿﻿⁪:‌‬​⁮‎‭⁬‭⁮   ()
	⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎             = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫﻿‬⁭‪⁭⁯‌⁪    ()
	
	if not ⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬ then
		⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬                = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫​﻿‎⁯‎﻿‬​ ()
		⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​ = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫‎⁮﻿﻿‬‭﻿‭     ()
		⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬   = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫‎⁮﻿﻿‬‭﻿‭     ()
		⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪        = ‬⁫‎‭⁬⁫﻿﻿⁪:⁫﻿‬⁭‪⁭⁯‌⁪    ()
	else
		⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬                = nil
		⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​ = nil
		⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬   = nil
		⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪        = nil
	end
	
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.﻿​⁭⁭‭⁮‬⁬‬ (⁬​⁯⁮‌‭‪‬‭, ⁪⁭⁪⁬⁭⁭⁭⁯‭)
	if ⁪⁭⁪⁬⁭⁭⁭⁯‭ == ⁬‭⁬⁭⁪​‎⁪‬.⁬⁬​⁪‎⁬​‎‎.‬⁫‎⁭‭⁫‌‬​ then
		return "Found lua function match for " .. ⁬​⁯⁮‌‭‪‬‭:⁪‪﻿⁪‎⁬﻿‬‎ ()
	elseif ⁪⁭⁪⁬⁭⁭⁭⁯‭ == ⁬‭⁬⁭⁪​‎⁪‬.⁬⁬​⁪‎⁬​‎‎.﻿⁯‎‎﻿⁯‬‭⁬ then
		return "Foreign lua ‌⁯⁮‌‌‬⁪⁫⁯: " .. ⁬​⁯⁮‌‭‪‬‭:⁪‪﻿⁪‎⁬﻿‬‎ ()
	elseif ⁪⁭⁪⁬⁭⁭⁭⁯‭ == ⁬‭⁬⁭⁪​‎⁪‬.⁬⁬​⁪‎⁬​‎‎.‌‪‌‌﻿⁪⁯⁫‌ then
		return "Foreign lua function hash: " .. ⁬​⁯⁮‌‭‪‬‭:⁪‪﻿⁪‎⁬﻿‬‎ ()
	elseif ⁪⁭⁪⁬⁭⁭⁭⁯‭ == ⁬‭⁬⁭⁪​‎⁪‬.⁬⁬​⁪‎⁬​‎‎.‌‭‬‬‎﻿﻿⁭‬ then
		return "Foreign lua function line span: " .. ⁬​⁯⁮‌‭‪‬‭:⁪‪﻿⁪‎⁬﻿‬‎ ()
	end
	
	return "Foreign lua function: " .. ⁬​⁯⁮‌‭‪‬‭:⁪‪﻿⁪‎⁬﻿‬‎ ()
end

function ⁬​⁯⁮‌‭‪‬‭.⁪‪﻿⁪‎⁬﻿‬‎ (⁬​⁯⁮‌‭‪‬‭)
	if ⁬​⁯⁮‌‭‪‬‭.⁪‌﻿⁬⁪‎‬​⁬ then return ﻿﻿‬‎⁫‬⁯⁫﻿.⁪⁮⁮⁬⁬‬‌⁬‌ ("Native [C]: %08x", ⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎) end
	return ﻿﻿‬‎⁫‬⁯⁫﻿.⁪⁮⁮⁬⁬‬‌⁬‌ ("%s: %08x, %08x, lines %4d-%4d", ⁬‭⁬⁭⁪​‎⁪‬.﻿‌⁯⁫⁭⁭‪‎‭.⁪⁬​‪⁪⁪‬⁭‌ (⁬​⁯⁮‌‭‪‬‭.﻿​‎⁭‎‪‎⁫‬), ⁬​⁯⁮‌‭‪‬‭.⁬​⁭﻿‌⁪⁮⁫⁪, ⁬​⁯⁮‌‭‪‬‭.⁪⁫‌‪⁫﻿﻿⁪‎, ⁬​⁯⁮‌‭‪‬‭.‌‎﻿‎​‭‌‬​, ⁬​⁯⁮‌‭‪‬‭.﻿⁬⁪⁭⁯‭‌​⁬)
end

if Profiler then
	⁬​⁯⁮‌‭‪‬‭.⁪‪﻿⁪‎⁬﻿‬‎ = Profiler:Wrap (⁬​⁯⁮‌‭‪‬‭.⁪‪﻿⁪‎⁬﻿‬‎, "⁬﻿‪‎⁮⁪⁯​⁫:ToString")
end


local ⁬⁬⁬​‭‭⁪‌⁬ = ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫ ()
function ⁬‭⁬⁭⁪​‎⁪‬.⁪⁪​⁭‎‭﻿​‌.‌‬‌​⁭⁯⁪‭‌ (⁬‬‎⁫⁬⁭‎‪‎, ⁫‪‌‎‬‬⁪‎⁭)
	⁫‪‌‎‬‬⁪‎⁭ = ⁫‪‌‎‬‬⁪‎⁭ or ⁬‭⁬⁭⁪​‎⁪‬.﻿﻿⁭‌‎⁫‎⁪​ ()
	
	⁬⁬⁬​‭‭⁪‌⁬ = ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‪‎⁮⁪⁯​⁫.⁪​﻿⁭​⁬⁫⁮⁪ (⁬‬‎⁫⁬⁭‎‪‎, ⁬⁬⁬​‭‭⁪‌⁬)
	⁬⁬⁬​‭‭⁪‌⁬:⁫⁮⁪⁮⁬⁭⁭‎⁯ (⁫‪‌‎‬‬⁪‎⁭)
	
	⁬‭⁬⁭⁪​‎⁪‬.⁪⁪​⁭‎‭﻿​‌.⁫​⁮‎‌⁯‬‬﻿ (⁬‬‎⁫⁬⁭‎‪‎, ⁬⁬⁬​‭‭⁪‌⁬)
	
	return ⁫‪‌‎‬‬⁪‎⁭
end
